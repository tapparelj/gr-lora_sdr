# auto-generated by grc.converter

id: lora_sdr_fft_demod
label: fft_demod
category: '[LoRa_RX]'

parameters:
-   id: soft_decoding
    label: Soft_Decoding
    dtype: bool
    default: 'soft_decoding'
    options: [False, True]
-   id: max_log_approx
    label: Max Log approx
    dtype: enum
    default: True
    options: ['False', 'True']
    option_labels: ['No', 'Yes']
    hide: ${ 'all' if not soft_decoding else 'part' }

inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: stream
    dtype: ${ 'f64' if soft_decoding else 'short'}
    vlen: ${ 12 if soft_decoding else 1} #maximum bit per symbol is 12

templates:
    imports: import gnuradio.lora_sdr as lora_sdr
    make: lora_sdr.fft_demod( ${soft_decoding}, ${max_log_approx})

documentation: |-
    Recover the value of a lora symbol using argmax(DFT(lora_symbol * ref_downchirp)
        Parameters: 
           impl_head: usage of an implicit header (explicit will be used otherwise) 
           soft_decoding: use soft-decision decoding, outputting LLRs instead of the argmax   
        Input:        
            in: vector of 2^sf complex samples        
        Output:        
            out: stream of lora symbol decimal values or bits LLRs if soft-decision decoding is selected

file_format: 1
