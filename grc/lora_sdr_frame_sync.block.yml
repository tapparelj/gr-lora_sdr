# auto-generated by grc.converter

id: lora_sdr_frame_sync
label: Frame sync
category: '[LoRa_RX]'

parameters:
-   id: samp_rate
    label: Samp_rate
    dtype: float
-   id: bandwidth
    label: Bandwidth
    dtype: int
-   id: sf
    label: Sf
    dtype: int
-   id: impl_head
    label: Impl_head
    dtype: bool
-   id: sync_words
    label: Sync words
    dtype: int_vector
    default: 0x12
    hide: part

inputs:
-   domain: stream
    dtype: complex
-   domain: message
    id: frame_info

outputs:
-   domain: stream
    dtype: complex
    vlen: ${ 2**sf }

templates:
    imports: import gnuradio.lora_sdr as lora_sdr
    make: lora_sdr.frame_sync(${samp_rate}, ${bandwidth}, ${sf}, ${impl_head}, ${sync_words})
asserts:
- ${ (samp_rate/bandwidth).is_integer()}

documentation: |-
    Block taking care of the preamble detection, CFO and STO estimation and correction.
        Parameters:
            Samp_rate: Sampling rate (should be a integer mutliple of the bandwidth). The higher the oversampling, the better the STO compensation.
            Bandwidth: Bandwidth
            sf: spreading factor
            impl_head: usage of an implicit header (explicit will be used otherwise)
        Input:
            in: stream of complex valued sampled
            frame_info: info of the frame contained in the header such as coding rate, CRC presence, and payload length  
        Output:
            out: stream of vectors of 2^sf samples


file_format: 1
