# auto-generated by grc.converter

id: lora_sdr_header_decoder
label: Header decoder
category: '[LoRa_RX]'

parameters:
-   id: impl_head
    label: Impl_head
    dtype: bool
-   id: cr
    label: Cr
    dtype: int
    default: '3'
-   id: pay_len
    label: Pay_len
    dtype: int
    default: '255'
-   id: has_crc
    label: Has_crc
    dtype: bool
    default: 'False'

inputs:
-   domain: stream
    dtype: byte

outputs:
-   domain: stream
    dtype: byte
-   domain: message
    id: frame_info

templates:
    imports: import lora_sdr
    make: lora_sdr.header_decoder(${impl_head}, ${cr}, ${pay_len}, ${has_crc})

documentation: "Recover information present in the header of a frame and send them\
    \ to the other blocks in the receiver chain.\nIn implicit header mode, the values\
    \ given as parameters will be transmitted to the other blocks. \n    Parameters:\n\
    \        impl_head: indicate the usage of implicit header mode (explicit otherwise)\n\
    \        cr: coding rate(will be ignored in explicit header mode)\n        pay_len:\
    \ payload length in bytes(will be ignored in explicit header mode)\n        has_crc:\
    \ indicate the presence of a payload CRC(will be ignored in explicit header mode)\n\
    \    Input:\n        in: stream of nibbles containing the header, payload (and\
    \ CRC if used)\n        new_frame: indicate the beginning of a new frame\n   \
    \ Output:\n        out: stream of nibbles containing payload (and CRC)\n     \
    \   CR: coding rate of the frame\n        pay_len: payload length of the frame\n\
    \        CRC: presence of a payload CRC\n        err: error in the explicit header\
    \ (checksum incorrect)"

file_format: 1
